#!/bin/sh
fail() {
    /bin/echo "Failed"
    /bin/echo "$1"
    exec /bin/sh
}

createswap() {
	#swap file
	if [ -e /sdcard/swapfile ] ; then
		rm /sdcard/swapfile
	fi

	echo "Creating swap"
	dd if=/dev/zero of=/sdcard/swapfile bs=1048576 count=32
	[ $? -eq 0 ] || fail "Failed to allocate the storage"
	mkswap /sdcard/swapfile
	[ $? -eq 0 ] || fail "Failed to initialize the swap file"

	echo "Turning on swap"
	swapon /sdcard/swapfile
	[ $? -eq 0 ] || fail "Couldn't activate the swap file"
	echo 20 > /proc/sys/vm/swappiness
}

PATH=/sbin:/system/sbin:/system/bin:/bin:/system/xbin:/system/xbin/bb:/data/local/bin

/bin/echo "Rootfs loaded."

/bin/mount -t proc proc /proc
/bin/mount -t sysfs sys /sys

if [ -e /sys/class/vogue_hw/gsmphone ] ; then
    echo "GSM phone found"
fi

PARTITIONED=0

#mkdir -m 0777 /sdcard
#echo "Running an fsck on the SD card"
#dosfsck -y /dev/block/mmcblk0p1
mount -t vfat -o fmask=0000,dmask=0000,rw,flush,noatime,nodiratime /dev/block/mmcblk0p1 /sdcard
[ $? -eq 0 ] || fail "Failed to mount the SD card. Cannot continue."

if [ ! -d /sdcard/cache ] ; then
    mkdir /sdcard/cache
fi

#mkdir -m 0777 /cache
mount /sdcard/cache /cache

if [ -e /sdcard/data.gz ] ; then
    echo "Please wait... extracting Data Image"
    if [ $PARTITIONED = "0" ] ; then
        if [ -e /sdcard/data.img ] ; then
            rm /sdcard/data.img
        fi
        gzip -df /sdcard/data.gz
        [ $? -eq 0 ] || fail "Failed to extract Data Image"
        mv /sdcard/data /sdcard/data.img
    else
        gzip -cd /sdcard/data.gz > /dev/block/mmcblk0p2
        rm /sdcard/data.gz
    fi
    echo "done"
fi

if [ $PARTITIONED = "0" ] ; then
    if [ ! -e /sdcard/data.img ] ; then
        echo "Creating a new Data store"
        dd if=/dev/zero of=/sdcard/data.img bs=1048576 count=128
        [ $? -eq 0 ] || fail "Failed to allocate the storage"
        mke2fs -F /sdcard/data.img
        [ $? -eq 0 ] || fail "Failed to format the storage"
    fi
fi

read -s -n1 -p "Press any key to start an automatic backup" -t 5
if [ "$?" == "0" ] ; then
	echo ""
    echo "Starting Backup..."
    if [ ! -d /sdcard/backup ] ; then
        mkdir /sdcard/backup
    fi
    gzip -vc /sdcard/data.img > /sdcard/backup/data$(date +%Y-%m-%d).gz
    echo "...Done!"
else
	echo ""
fi

#mkdir -m 0755 /data
if [ $PARTITIONED = "0" ] ; then
    losetup /dev/block/loop0 /sdcard/data.img
    [ $? -eq 0 ] || fail "Failed to find data.img on SD Card"
    e2fsck -y /dev/block/loop0
    mount -t ext2 -o noatime,nodiratime,sync /dev/block/loop0 /data
else
    e2fsck -y /dev/block/mmcblk0p2
    mount -t ext2 -o noatime,nodiratime /dev/block/mmcblk0p2 /data
fi
[ $? -eq 0 ] || fail "Failed to mount /data"


#mkdir -m 0755 /system
if [ -e /sdcard/system.ext2 ] ; then
    echo "Using uncompressed system"
    losetup /dev/block/loop1 /sdcard/system.ext2
    [ $? -eq 0 ] || fail "Failed to reach system.ext2 on SD Card"
    e2fsck -y /dev/block/loop1
    mount -t ext2 -o ro,noatime,nodiratime /dev/block/loop1 /system
    [ $? -eq 0 ] || fail "Failed to mount /system"
else
    losetup /dev/block/loop1 /sdcard/system.img
    [ $? -eq 0 ] || fail "Failed to find system.img on SD Card"
    mount -t cramfs -o ro,noatime,nodiratime /dev/block/loop1 /system
    [ $? -eq 0 ] || fail "Failed to mount /system"
fi

if [ -d /sdcard/AndroidApps ] ; then
    echo Copying Applications
    if [ ! -d /data/app ] ; then
        mkdir -m 0771 /data/app
    fi
    /bin/cp /sdcard/AndroidApps/* /data/app
    chown -R 1000:1000 /data/app
fi

if [ ! -d /sdcard/media ] ; then
    echo You have no media folder, please extract the resources to your SD card
fi


LCDDENSITY=`/bin/grep -o "lcd.density=.*" /proc/cmdline | /bin/sed -e "s/.*lcd.density=//g" -e "s/ .*//g"`

if [ "$LCDDENSITY" != "" ] ; then
    echo "ro.sf.lcd_density=$LCDDENSITY" >> /default.prop
    echo Setting ro.sf.lcd_density=$LCDDENSITY
fi

SQLITE3="/bin/sqlite3"
DB="/data/data/com.android.providers.telephony/databases/telephony.db"
if [ -e $DB ] ; then
    if [ "`$SQLITE3 $DB 'SELECT numeric FROM carriers;' | grep 310995`" != "310995" ] ; then
        echo Creating android apn
        "$SQLITE3" "$DB" "INSERT INTO carriers VALUES(NULL, 'Android' , '310995' , '310' , '995' , 'internet' , '*' , '*' , '*' , NULL, NULL, NULL, NULL, 'null' , 'default' , 1);"
    fi
else
    echo No telephony database. You must have a new data file. I will check for the android apn on the next reboot
fi

rm -rf /data/etc
mkdir -m 0755 /data/etc
mount /data/etc /etc
/bin/cp -a /system/etc/* /etc
/bin/cp -a /initetc/* etc

if [ ! -d /data/shared_prefs ] ; then
	mkdir -m 0770 /data/shared_prefs
fi
chmod 0770 /data/shared_prefs
chown 1000:1000 /data/shared_prefs
mount /data/shared_prefs /shared_prefs

mount /sdcard/cache /tmp

echo "Checking for hero..."
if [ -e /system/app/HtcTwitter.apk ] ; then
	echo "Hero build detected"
	cp /init.hero.rc /etc/init.rc
elif [ -e /system/hero.build ] ; then
	echo "Hero build detected"
	cp /init.hero.rc /etc/init.rc
	createswap
elif [ -e /system/rogers.build ] ; then
	echo "Rogers build detected"
	cp /init.rogers.rc /etc/init.rc
elif [ -e /system/custom.build ] ; then
	echo "Custom init.rc detected"
	cp /system/sysinit.rc /etc/init.rc
else
	echo "Hero/Rogers builds not found. Assuming Ion variant"
	cp /init.ion.rc /etc/init.rc
fi

# echo /dev/block/mmcblk0p2 > /sys/devices/platform/usb_mass_storage/lun0/file
#ifconfig usb0 192.168.2.1 up
#telnetd -b 192.168.2.1
#chmod 4755 /bin/su
#mkdir -m 0777 /smodem
rm -rf /data/smodem
mkdir -m 0755 /data/smodem
mount /data/smodem /smodem
mknod -m 0777 /smodem/control p
exec /init1
